q()
TEJ101 <- read.csv(file="TEJ101.csv")
TEJ101_fill <- read.csv(file="TEJ101_fill.csv")
View(TEJ101)
TEJ_lm101 <- TEJ101_fill
TEJ_lm101[!is.finite(TEJ_lm101$RELAT),]$RELAT <- 0
ETR_lmodel101_noSH <- lm(ETR ~ STR+HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lm101)
CETR_lmodel101_noSH <- lm(CETR ~ STR+HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lm101)
ETR_lmodel101_SH <- lm(ETR ~ STR+HHI+STR_HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lm101)
CETR_lmodel101_SH <- lm(CETR ~ STR+HHI+STR_HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lm101)
q()
source("settings.R")
setwd("Essay_coding")
dir()
getwd()
source("settings.R")
TEJ101 <- read.csv(file="TEJ101.csv")
TEJ101_fill <- read.csv(file="TEJ101_fill.csv")
TEJ101 <- read.csv(file="TEJ101.csv",encoding = "cht")
TEJ101 <- read.csv(file="TEJ101.csv",encoding = "UTF-8")
source("main_1996ver_functions.R")
source("main_1996ver_functions.R")
?write.csv
write.csv(TEJ101,file="TEJ101.csv",append=FALSE,row.names=FALSE,col.names=TRUE)
write.csv(TEJ101,file="TEJ101.csv"
#,append=FALSE,row.names=FALSE,col.names=TRUE
)
write.csv(TEJ101,file="TEJ101.csv"
#,append=FALSE,row.names=FALSE,col.names=TRUE
)
write.csv(TEJ101_fill,file="TEJ101_fill.csv"
#,append=FALSE,row.names=FALSE,col.names=TRUE
)
rm(list=ls())
TEJ101 <- read.csv(file="TEJ101.csv")
TEJ101_fill <- read.csv(file="TEJ101_fill.csv")
TEJ_lm101 <- TEJ101_fill
TEJ_lm101[!is.finite(TEJ_lm101$RELAT),]$RELAT <- 0
ETR_lmodel101_noSH <- lm(ETR ~ STR+HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lm101)
CETR_lmodel101_noSH <- lm(CETR ~ STR+HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lm101)
ETR_lmodel101_SH <- lm(ETR ~ STR+HHI+STR_HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lm101)
CETR_lmodel101_SH <- lm(CETR ~ STR+HHI+STR_HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lm101)
tbA4_ETR <- base::subset(TEJ101,select=c(ETR,STR,HHI,ROA,SIZE,LEV,INTANG,QUICK,EQINC,OUTINSTI,RELAT,FAM_Dum,GDP))
tbA4_CETR <- base::subset(TEJ101,select=c(CETR,STR,HHI,ROA,SIZE,LEV,INTANG,QUICK,EQINC,OUTINSTI,RELAT,FAM_Dum,GDP))
tbA4_ETR$RELAT[which(!is.finite(tbA4_ETR$RELAT))] <- 1000
tbA4_CETR$RELAT[which(!is.finite(tbA4_CETR$RELAT))] <- 1000
corstars <-function(x, method=c("pearson", "spearman"), removeTriangle=c("upper", "lower"),
# result=c("none", "html", "latex"),
tbtitle = ""){
#Compute correlation matrix
x <- as.matrix(x)
correlation_matrix<-rcorr(x, type=method[1])
R <- correlation_matrix$r # Matrix of correlation coeficients
p <- correlation_matrix$P # Matrix of p-value
## Define notions for significance levels; spacing is important.
mystars <- ifelse(p < .001, "****", ifelse(p < .01, "*** ", ifelse(p < .05, "**  ", ifelse(p < .1, "*   ", "    "))))
## trunctuate the correlation matrix to two decimal
R <- format(round(cbind(rep(-1.11, ncol(x)), R), 3))[,-1]
## build a new matrix that includes the correlations with their apropriate stars
Rnew <- matrix(paste(R, mystars, sep=""), ncol=ncol(x))
diag(Rnew) <- paste(diag(R), " ", sep="")
rownames(Rnew) <- colnames(x)
colnames(Rnew) <- paste(colnames(x), "", sep="")
## remove upper triangle of correlation matrix
if(removeTriangle[1]=="upper"){
Rnew <- as.matrix(Rnew)
Rnew[upper.tri(Rnew, diag = FALSE)] <- ""
Rnew <- as.data.frame(Rnew)
}
## remove lower triangle of correlation matrix
else if(removeTriangle[1]=="lower"){
Rnew <- as.matrix(Rnew)
Rnew[lower.tri(Rnew, diag = FALSE)] <- ""
Rnew <- as.data.frame(Rnew)
}
# Rnew <- cbind(Rnew[1:length(Rnew)])
#  if (result[1]=="none") return(Rnew)
#  else{
#    if(result[1]=="html")
comment <- list()
comment$pos <- list()
comment$pos[[1]] <- c(nrow(Rnew))
comment$command <- c(
paste("\\hline \\multicolumn{14}{L{0.5cm}}{\\textbf{註: }a.變數定義同前表。
b.****, ***, **, *, 分別代表 0.1%, 1%, 5%, 10% 顯著水準。} \\\\"))
print(xtable(Rnew,
digits=3,
caption = tbtitle
#,type="html"
),
type = "html",
add.to.row = comment,
table.placement = "h!",
hline.after = c(-1,0),
caption.placement = 'top')
#     else print(xtable(Rnew), type="latex")
#    }
# from site: http://www.sthda.com/english/wiki/elegant-correlation-table-using-xtable-r-package
}
write(corstars(tbA4_ETR,method = 'pearson',removeTriangle = 'lower'
#,result = 'html'
,tbtitle = "Table?.? 各變數之Pearson相關係數表：應變數為ETR"),
file="correlation_ETR.html",append=FALSE)
pack <- function(var=0){
# install.packages("compiler")
library(compiler)
for(pklist in c('readxl','xlsx','plyr','dplyr','knitr','data.table',
'grid','gridExtra','ggplot2','zoo','R.oo','R.utils','psych',
'robustHD','rbenchmark','foreign','rgl','stargazer','rmarkdown','DiagrammeR',
'DiagrammeRsvg','magrittr','svglite','rsvg','png','xtable','latex2exp','Hmisc')){
Install.pack <- cmpfun(function(lists=pklist){
pklist <- lists
new.packages <- pklist[!(pklist %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.packages)}else{update.packages(pklist)}
})
Load.pack <- cmpfun(function(list=as.list(packtogo)){lapply(pklist, require, character.only = TRUE)})
if(var==1){
Install.pack() # 安裝
Load.pack()} #掛載
else{Load.pack()}
#p.s. kable belongs to package:knitr
}}
#pack(var=0) # load package
pack(var=1) # install and load packages!
pack <- function(var=0){
# install.packages("compiler")
library(compiler)
for(pklist in c('readxl','xlsx','plyr','dplyr','knitr','data.table',
'grid','gridExtra','ggplot2','zoo','R.oo','R.utils','psych',
'robustHD','rbenchmark','foreign','rgl','stargazer','rmarkdown','DiagrammeR',
'DiagrammeRsvg','magrittr','svglite','rsvg','png','xtable','latex2exp','Hmisc')){
Install.pack <- cmpfun(function(lists=pklist){
pklist <- lists
new.packages <- pklist[!(pklist %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.packages)}else{update.packages(pklist)}
})
Load.pack <- cmpfun(function(list=as.list(packtogo)){lapply(pklist, require, character.only = TRUE)})
if(var==1){
Install.pack() # 安裝
Load.pack()} #掛載
else{Load.pack()}
#p.s. kable belongs to package:knitr
}}
pack(var=0) # load package
pack(var=0) # load package
pack <- function(var=0){
# install.packages("compiler")
library(compiler)
for(pklist in c('readxl','xlsx','plyr','dplyr','knitr','data.table',
'grid','gridExtra','ggplot2','zoo','R.oo','R.utils','psych',
'robustHD','rbenchmark','foreign','rgl','stargazer','rmarkdown','DiagrammeR',
'DiagrammeRsvg','magrittr','svglite','rsvg','png','xtable','latex2exp','Hmisc')){
Install.pack <- cmpfun(function(lists=pklist){
pklist <- lists
new.packages <- pklist[!(pklist %in% installed.packages()[,"Package"])]
if(length(new.packages)){install.packages(new.packages)}else{update.packages(pklist)}
})
Load.pack <- cmpfun(function(list=as.list(packtogo)){lapply(pklist, require, character.only = TRUE)})
if(var==1){
Install.pack() # 安裝
Load.pack()} #掛載
else{Load.pack()}
#p.s. kable belongs to package:knitr
}}
pack(var=0) # load package
install.packages("packrat")
install.packages(c("foreign", "lattice", "Matrix", "mgcv"), lib="D:/Documents/Dropbox/MyEssay/Essay_coding/packrat/lib-R")
q()
