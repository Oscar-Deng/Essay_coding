)
,"tbA3_full敘述統計表.txt")
#-
TEJ_lm101 <- TEJ101
TEJ_lmNew101 <- NewTEJ101
ETR_lmodelNew101_noSH <- lm(ETR ~ STR+HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lmNew101)
CETR_lmodelNew101_noSH <- lm(CETR ~ STR+HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lmNew101)
ETR_lmodelNew101_SH <- lm(ETR ~ STR+HHI+STR_HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lmNew101)
CETR_lmodelNew101_SH <- lm(CETR ~ STR+HHI+STR_HHI+ROA+SIZE+LEV+INTANG+QUICK+EQINC+OUTINSTI+RELAT+FAM_Dum+GDP,TEJ_lmNew101)
write(stargazer(ETR_lmodelNew101_SH,CETR_lmodel101_SH,summary=TRUE,type="text",single.row=FALSE,report="vcstp*"),file="empirical_SH.txt")
write(stargazer(ETR_lmodelNew101_noSH,CETR_lmodel101_noSH,summary=TRUE,type="text",single.row=FALSE,report="vcstp*"),file="empirical_noSH.txt")
stargazer::stargazer(base::subset(NewTEJ101,select=c(RD,EMP,MB,MARKET,PPE))
,type = "text"
,summary.stat = c("n","sd","min","p25","median","p75","max","mean")
,column.labels=c("數量","標準差","最小值","第一四分位距","中位數","第三四分位距","最大值","平均數")
,table.placement = "h!"
,title = "敘述統計表"
)
DT1 <- stargazer::stargazer(base::subset(NewTEJ101,select=c(RD,EMP,MB,MARKET,PPE))
DT1 <- stargazer::stargazer(base::subset(NewTEJ101,select=c(RD,EMP,MB,MARKET,PPE)))
write(stargazer::stargazer(base::subset(NewTEJ101,select=c(RD,EMP,MB,MARKET,PPE))
,type = "text"
,summary.stat = c("n","sd","min","p25","median","p75","max","mean")
,column.labels=c("數量","標準差","最小值","第一四分位距","中位數","第三四分位距","最大值","平均數")
,table.placement = "h!"
,title = "敘述統計表"
)
,"tbA3_str敘述統計表.txt")
View(pack)
table(TEJ01$year,TEJ01$TSE_code)
table(TEJ01$TSE_code,TEJ01$year)
write(table(TEJ01$TSE_code,TEJ01$year),file="tableofTSE_originalTEJ01.txt")
write(as.matrix(table(TEJ01$TSE_code,TEJ01$year)),file="tableofTSE_originalTEJ01.txt")
as.matrix(table(TEJ01$TSE_code,TEJ01$year))
as.data.frame.matrix(table(TEJ01$TSE_code,TEJ01$year))
write(as.data.frame.matrix(table(TEJ01$TSE_code,TEJ01$year)),file="tableofTSE_originalTEJ01.txt")
tb <- as.data.frame.matrix(table(TEJ01$TSE_code,TEJ01$year))
View(tb)
write(tb,file="tableofTSE_originalTEJ01.txt")
write.csv(tb,file="tableofTSE_originalTEJ01.csv")
grid.table(tb)
plottbA2 <- function(DB){
#  tbTEJ4 <- table(TEJ4$TSE_code,TEJ4$year)
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
png(filename="tbA2_公司家數統計.png",width=300,height = 200,units="mm",res = 500)
grid.table(tbA2)
dev.off()
# write.xlsx(tbA2,file="tables.xlsx",sheetName = "table2",col.names = TRUE,row.names = TRUE,showNA = FALSE,append = TRUE)
return(tbA2)
}
plottbA2 <- function(DB=TEJ101,filename="tbA2_公司家數統計.png"){
#  tbTEJ4 <- table(TEJ4$TSE_code,TEJ4$year)
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
png(filename="tbA2_公司家數統計.png",width=300,height = 200,units="mm",res = 500)
grid.table(tbA2)
dev.off()
return(tbA2)
}
plottbA2 <- function(DB=TEJ101,filename="tbA2_公司家數統計.png"){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
png(filename="tbA2_公司家數統計.png",width=300,height = 200,units="mm",res = 500)
grid.table(tbA2)
dev.off()
# write.xlsx(tbA2,file="tables.xlsx",sheetName = "table2",col.names = TRUE,row.names = TRUE,showNA = FALSE,append = TRUE)
return(tbA2)
}
plottbA2(DB=TEJ01,filename = "tbTEJ01.png")
plottbA2 <- function(DB=TEJ101,filename="tbA2_公司家數統計.png"){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
png(filename="tbA2_公司家數統計.png",width=350,height = 200,units="mm",res = 500)
grid.table(tbA2)
dev.off()
# write.xlsx(tbA2,file="tables.xlsx",sheetName = "table2",col.names = TRUE,row.names = TRUE,showNA = FALSE,append = TRUE)
return(tbA2)
}
plottbA2 <- function(DB=TEJ101,filename="tbA2_公司家數統計.png"){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
png(filename="tbA2_公司家數統計.png",width=350,height = 200,units="mm",res = 500)
grid.table(tbA2)
dev.off()
# write.xlsx(tbA2,file="tables.xlsx",sheetName = "table2",col.names = TRUE,row.names = TRUE,showNA = FALSE,append = TRUE)
return(tbA2)
}
plottbA2(DB=TEJ01,filename = "tbTEJ01.png")
plot_industrial_year(DB = TEJ101,filename = "tbA2_公司家數統計.png")
plot_industrial_year <- function(DB=TEJ101,filename="tbA2_公司家數統計.png"){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
png(filename=filename,width=350,height = 200,units="mm",res = 500)
grid.table(tbA2)
dev.off()
# write.xlsx(tbA2,file="tables.xlsx",sheetName = "table2",col.names = TRUE,row.names = TRUE,showNA = FALSE,append = TRUE)
return(tbA2)
}
plot_industrial_year(DB = TEJ101,filename = "tbA2_公司家數統計.png")
plot_industrial_year(DB = TEJ01,filename = "原始資料公司家數統計.png")
plot_ind <- function(DB=TEJ01){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
pdf(file="年度家數統計.pdf",
stargazer::stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE)
)
}
plot_ind <- function(DB=TEJ01){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
pdf(file="年度家數統計.pdf",
stargazer::stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE)
)
}
plot_ind()
dev.off()
dev.off()
dev.off()
dev.off()
plot_ind <- function(DB=TEJ01){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
pdf(file="年度家數統計.pdf",
stargazer::stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE)
)
dev.off()
}
plot_ind()
pdf(file="年度家數統計.pdf")
stargazer::stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE)
dev.off()
dev.off()
plot_ind <- function(DB=TEJ01){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
pdf(file="年度家數統計.pdf")
stargazer::stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE)
dev.off()
}
plot_ind()
?pdf
rm(DT)
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
plot_ind <- function(DB=TEJ01){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
pdf(file="年度家數統計.pdf",paper="a4",onefile=TRUE,title="公司家數統計表")
stargazer::stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE)
dev.off()
}
plot_ind()
plot_ind <- function(DB=TEJ01){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
pdf(file="年度家數統計.pdf",paper="a4",onefile=TRUE,title="公司家數統計表")
stargazer::stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE,type="text")
dev.off()
}
plot_ind()
dev.off()
plot_ind <- function(DB=TEJ01){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
#pdf(file="年度家數統計.pdf",paper="a4",onefile=TRUE,title="公司家數統計表")
write(
stargazer::stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE,type="text")
,file="家數統計表.txt")
#dev.off()
}
plot_ind()
plot_ind <- function(DB=TEJ01,file="家數統計表.txt"){
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
#pdf(file="年度家數統計.pdf",paper="a4",onefile=TRUE,title="公司家數統計表")
write(
stargazer::stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE,type="text")
,file=file)
#dev.off()
}
plot_ind(DB=TEJ,file="new.txt")
?stargazer
DB=TEJ01
DB$TSE <- paste(DB$TSE_code,DB$TSE_name,sep=" ")
tbA2 <- as.data.frame.matrix(table(DB$TSE,DB$year))
tbA2 <- cbind(tbA2, '小計'=rowSums(tbA2,na.rm = TRUE))
tbA2 <- rbind(tbA2, '合計'=colSums(tbA2,na.rm = TRUE))
stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE,type="text")
pdf(file = "111.pdf")
stargazer(tbA2,title="各年度公司家數統計表",summary=FALSE,type="latex")
dev.off()
rm(list=ls())
readDB <- cmpfun(function(DB_fil = "TEJ1996.xlsx", attr_fil = "DB2.xlsx", attr_sht = "TEJ_attr", xls_sht = "TEJ"){
DBattr <- read_excel(attr_fil, sheet=attr_sht, col_names = TRUE)
# read in excel database: DB2.xlsx, excel sheet: TEJ, with column names.
DBori <- read_excel(DB_fil, sheet=xls_sht, col_names = TRUE, col_types = DBattr$attr)
# rename columns
setnames(DBori,old=as.character(DBattr$old), new=as.character(DBattr$new))
return(DBori)
})
if(readDB in list) TRUE
?if
else
?ifelse
if()
a = 10
if(a == 10) {TRUE}
if(readDB in list) {TRUE}
if(readDB %in% list) {TRUE}
list()
ls
ls()
if(readDB %in% ls) {TRUE}
ls() = ls
ls <- ls()
ls
if(readDB %in% ls) {TRUE}
if(readDB in ls) {TRUE}
for(a in ls){print(TRUE)}
for(a in ls)
TRUE
exists(a)
exists(b)
if(exists(a)){FALSE}
if(exists(a)){print("here")}
if(exists(b)){print("here")}
ifelse(exists(a),print("here"),print("not here"))
ifelse(exists(ls),print("here"),print("not here"))
ifelse(exists(b),print("here"),print("not here"))
exists("a")
exists("b")
if(exists("ls")){print("here")} else {print("not here")}
if(exists("b")){print("here")} else {print("not here")}
rm(list=ls())
library(lip)
library(lpsolve)
install.packages("linprog")
library(linprog)
library(lpSolve)
obj.fun <- c(40, 50)
constr <- matrix(c(1,2,4,3),ncol=2,byrow=TRUE)
constr.dir <- c("<=","<=")
rhs <- c(40,120)
prod.sol <- lp("max", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$obj.val
prod.sol$solution
prod.sol$duals
24*40+8*50
prod.sol$objval # max for Z
obj.fun <- c(6,3) # Z's x1,x2 coef
constr <- matrix(c(2,4,4,3),ncol=2,byrow=TRUE) # s.t.'s coef
constr.dir <- c(">=",">=") # s.t.'s equal side
rhs <- c(16,24) # s.t.'s = ans
prod.sol <- lp("min", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$objval # max for Z
prod.sol$solution
obj.fun <- c(400,200) # Z's x1,x2 coef
constr <- matrix(c(1,1,2,8,1,0),ncol=2,byrow=TRUE) # s.t.'s coef
constr.dir <- c("=",">=","<=") # s.t.'s equal side
rhs <- c(30,80,20) # s.t.'s = ans
prod.sol <- lp("min", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$objval # max for Z
prod.sol$solution
obj.fun <- c(400,200,0,0) # Z's x1,x2 coef
constr <- matrix(c(1,1,0,0,2,8,-1,0,1,0,0,1),ncol=4,byrow=TRUE) # s.t.'s coef
constr.dir <- c("=","=","=") # s.t.'s equal side
rhs <- c(30,80,20) # s.t.'s = ans
prod.sol <- lp("min", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$objval # max for Z
prod.sol$solution
obj.fun <- c(400,200) # Z's x1,x2 coef
constr <- matrix(c(1,1,2,8,1,0),ncol=2,byrow=TRUE) # s.t.'s coef
constr.dir <- c("=",">=","<=") # s.t.'s equal side
rhs <- c(30,80,20) # s.t.'s = ans
prod.sol <- lp("min", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$objval # max for Z
prod.sol$solution
obj.fun <- c(400,200) # Z's x1,x2 coef
constr <- matrix(c(1,1,2,8,1,0),ncol=2,byrow=TRUE) # s.t.'s coef
constr.dir <- c("=",">=","<=") # s.t.'s equal side
rhs <- c(30,80,20) # s.t.'s = ans
prod.sol <- lp("min", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$objval # max for Z
prod.sol$solution
obj.fun <- c(400,200) # Z's x1,x2 coef
constr.dir <- c("=",">=","<=") # s.t.'s equal side
rhs <- c(30,80,20) # s.t.'s = ans
constr <- matrix(c(1,1,2,8,1,0),ncol=2,byrow=TRUE) # s.t.'s coef
prod.sol <- lp("max", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$objval # max for Z
prod.sol$solution
obj.fun <- c(400,200,0,0) # Z's x1,x2 coef
constr.dir <- c("=","=","=") # s.t.'s equal side
constr <- matrix(c(1,1,0,0,2,8,-1,0,1,0,0,1),ncol=4,byrow=TRUE) # s.t.'s coef
rhs <- c(30,80,20) # s.t.'s = ans
prod.sol <- lp("max", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$objval # max for Z
prod.sol$solution
obj.fun <- c(5,3)
constr.dir <- c("<=",">=",">=")
rhs <- c(8,4,6)
constr <- matrix(c(4,2,1,0,0,1),ncol=2,byrow = TRUE)
prod.sol <- lp("max", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$objval # max for Z
prod.sol$solution
prod.sol$duals
obj.fun <- c(8,2)
constr <- matrix(c(4,5,2,6),ncol=2,byrow = TRUE)
constr.dir <- c("<=","<=")
rhs <- c(20,18)
prod.sol <- lp("max", obj.fun, constr, constr.dir, rhs, compute.sens = TRUE)
prod.sol$objval # max for Z
prod.sol$solution
rm(list=ls())
?mapply
?lapply
source("main_1996ver_functions_loadin.R")
readDB <- cmpfun(function(DB_fil = "TEJ1996.xlsx", attr_fil = "DB2.xlsx", attr_sht = "TEJ_attr", xls_sht = "TEJ"){
DBattr <- read_excel(attr_fil, sheet=attr_sht, col_names = TRUE)
# read in excel database: DB2.xlsx, excel sheet: TEJ, with column names.
DBori <- read_excel(DB_fil, sheet=xls_sht, col_names = TRUE, col_types = DBattr$attr)
# rename columns
setnames(DBori,old=as.character(DBattr$old), new=as.character(DBattr$new))
return(DBori)
})
NAto0 <- cmpfun(function(x = 'TEJ01',col=c(NA)){
x1 <- captureOutput(
for(y in col){cat(x,'$',y,'[is.na(',x,'$',y,')] <- 0',sep="",fill = TRUE)})
x2 <- captureOutput(cat('return(',paste(x),')',sep=""))
xx <- c(x1,x2)
eval(base::parse(text=xx))})
dep_var <- function(x=TEJ3,k=5){
DB01 <- x[,.SD[.N >= k],by=company]
DB02 <- x[,.SD[.N < k],by=company]
DB1 <- DB01[,`:=`(BTE5yrsum = rollapplyr(BTE, width = 5, FUN = sum, fill = NA),
CTP5yrsum = rollapplyr(CTP, width = 5, FUN = sum, fill = NA),
PTEBX5yrsum = rollapplyr(PTEBX, width = 5, FUN = sum, fill = NA)),
by=company]
DB2 <- DB02[,`:=`(BTE5yrsum = 0,CTP5yrsum = 0,PTEBX5yrsum = 0),by=company]
DB3 <- rbind(DB1,DB2)
DB <- transform(DB3,
ETR = as.numeric(BTE5yrsum) / as.numeric(PTEBX5yrsum),
CETR = as.numeric(CTP5yrsum) / as.numeric(PTEBX5yrsum))
return(as.data.table(DB[order(DB$company,DB$year),]))} # add up 5 years moving sum
STR <- function(x=TEJ4) {
x <- x[order(x$company,x$year),]
rollmn <- function(x) rollapplyr(x, width, function(x) mean(x, na.rm = TRUE), fill=NA)
mkdt <- capture.output(for(i in 1:20){
cat('DB',i,"<- x[,.SD[.N==",i,"],by=company]",sep="",fill=TRUE)
if(i>5){cat("width <- list(numeric(0),-1,-(1:2),-(1:3),-(1:4)",rep(',-(1:5)',i-5),')',sep="",fill=TRUE)}
if(i==5){cat("width <- list(numeric(0),-1,-(1:2),-(1:3),-(1:4)",')',sep="",fill=TRUE)}
if(i==4){cat("width <- list(numeric(0),-1,-(1:2),-(1:3)",')',sep="",fill=TRUE)}
if(i==3){cat("width <- list(numeric(0),-1,-(1:2)",')',sep="",fill=TRUE)}
if(i==2){cat("width <- list(numeric(0),-1",')',sep="",fill=TRUE)}
if(i==1){cat("width <- numeric(0)",sep="",fill=TRUE)}
cat('DB',i,'<-transform(DB',i,
",STR_RD_mean = ave(STR_RD, company, FUN=rollmn),STR_EMP_mean = ave(STR_EMP, company, FUN=rollmn),STR_MB_mean = ave(STR_MB, company, FUN=rollmn),STR_MARKET_mean = ave(STR_MARKET, company, FUN=rollmn),STR_PPE_mean = ave(STR_PPE, company, FUN=rollmn))",sep="",fill=TRUE)
})
eval(base::parse(text=mkdt))
DT <- rbind(DB1,DB2,DB3,DB4,DB5,DB6,DB7,DB8,DB9,DB10,DB11,DB12,DB13,DB14,DB15,DB16,DB17,DB18,DB19,DB20)
NAto0 <- function(x = 'DT',col=c('STR_RD_mean','STR_EMP_mean','STR_MB_mean','STR_MARKET_mean','STR_PPE_mean')){
x1 <- captureOutput(
for(y in col){cat(x,'$',y,'[is.nan(',x,'$',y,')] <- 0',sep="",fill = TRUE)})
x2 <- captureOutput(cat('return(',paste(x),')',sep=""))
xx <- c(x1,x2)
eval(base::parse(text=xx))} # replace NA with 0.
DT1 <- NAto0(x = 'DT',col=c('STR_RD_mean','STR_EMP_mean','STR_MB_mean','STR_MARKET_mean','STR_PPE_mean'))
DBA <- as.data.table(DT1[order(DT1$company,DT1$year),])
#  DBA <- DBA[(DBA$year %in% seq(2001,2015))]
return(DBA)
}
fnHHI <- function(x=TEJ6) {
func <- function(z=y2) {
rollmn <- function(x) rollapplyr(x, width, function(x) mean(x, na.rm = TRUE), fill=NA)
mkdt <- capture.output(for(i in 1:20){
cat('DB',i,"<- z[,.SD[.N==",i,"],by=TSE_code]",sep="",fill=TRUE)
if(i>5) cat("width <- list(numeric(0),-1,-(1:2),-(1:3),-(1:4)",rep(',-(1:5)',i-5),')',sep="",fill=TRUE)
if(i==5) cat("width <- list(numeric(0),-1,-(1:2),-(1:3),-(1:4)",')',sep="",fill=TRUE)
if(i==4) cat("width <- list(numeric(0),-1,-(1:2),-(1:3)",')',sep="",fill=TRUE)
if(i==3) cat("width <- list(numeric(0),-1,-(1:2)",')',sep="",fill=TRUE)
if(i==2) cat("width <- list(numeric(0),-1",')',sep="",fill=TRUE)
if(i==1) cat("width <- list(numeric(0))",sep="",fill=TRUE)
cat('DB',i,'<-transform(DB',i, ",HHI = ave(HHIsum, TSE_code, FUN=rollmn))",sep="",fill=TRUE)
})
eval(base::parse(text=mkdt))
DT <- rbind(DB1,DB2,DB3,DB4,DB5,DB6,DB7,DB8,DB9,DB10,DB11,DB12,DB13,DB14,DB15,DB16,DB17,DB18,DB19,DB20)
return(DT)
}
x1 <- x[,NSsum := sum(NetSales,na.rm = TRUE),by=list(TSE_code,year)]
x2 <- x1[,NSalpha2 := (as.numeric(NetSales) / as.numeric(NSsum))^2 ]
x3 <- x2[,HHIsum := sum(NSalpha2,na.rm = TRUE),by=list(TSE_code,year)]
y1 <- subset(x3,select=c(TSE_code,year,HHIsum))
y2 <- y1[!duplicated(y1)][order(TSE_code, year),]
y3 <- func(y2)
y4 <- subset(y3,select=c(TSE_code,year,HHI))
z1 <- merge(x3,y4,by=c("TSE_code","year"))
z1$HHI_original <- ifelse(is.nan(z1$HHI),as.numeric(NA),as.numeric(z1$HHI))
z1$HHI_Dum <- ifelse(z1$HHI < 0.1,1,0)
DB <- transform(z1, STR_HHI = as.numeric(STR * HHI_Dum))
#DBA <- DB[order(TSE_code,year,company)]
return(DB)
}
winsorized.sample <- function (x, prob = 0) { # remove NA
n <- length(x)
n0 <- length(x[!is.na(x)])
low <- floor(n0 * prob) + 1
high <- n0 + 1 - low
idx <- seq(1,n)
DT <-data.frame(idx,x)
DT2<-DT[order(DT$x,DT$idx,na.last=TRUE),]
DT2$x[1:low]<-DT2$x[low]
DT2$x[high:n0]<-DT2$x[high]
DT3<-DT2[order(DT2$idx,DT2$x),]
x2<-DT3$x
return(x2)}
winsamp1 <- function(x = 'TEJ81', col=c('ETR','CETR','ROA','SIZE','LEV','INTANG','QUICK','EQINC','OUTINSTI','RELAT')
, prob=0.01, na.rm=TRUE){
x1 <- captureOutput(cat('DB1<-',x,sep="",fill=TRUE))
x2 <- captureOutput(for(y in col){cat('DB1$',y,' <- winsor(',x,'$',y,',trim = ',prob,',na.rm = ',na.rm,')',sep="",fill = TRUE)})
eval(base::parse(text=x1))
eval(base::parse(text=x2))
return(DB1)}
winsamp2 <- function(x = 'TEJ82', col=c('ETR','CETR','ROA','SIZE','LEV','INTANG','QUICK','EQINC','OUTINSTI','RELAT')
, prob=0.01){
x1 <- captureOutput(cat('DB1<-',x,sep="",fill=TRUE))
x2 <- captureOutput(for(y in col){cat('DB1$',y,' <- winsorized.sample(',x,'$',y,',prob = ',prob,')',sep="",fill = TRUE)})
eval(base::parse(text=x1))
eval(base::parse(text=x2))
return(DB1)}
winsamp1 <- cmpfun(winsamp1)
winsamp2 <- cmpfun(winsamp2)
rm(list=ls()
)
source("main_1996ver_functions_loadin.R")
TEJ <- readDB(DB_fil = "TEJ1996.xlsx", attr_fil = "DB2.xlsx", attr_sht = "TEJ_attr", xls_sht = "TEJ")
plot_filtering <- function(DB=TEJ,file="表1.1樣本篩選表.png"){
x <- nrow(DB)
x1 <- nrow(DB[DB$TSE_code=='M2800',])-6
x2 <- nrow(DB[DB$TSE_code=='M9900',])-6
x3 <- nrow(DB[DB$TSE_code=='M2331',])-6
x4 <- nrow(DB[DB$TSE_code=='W91',])-6
DB05 <- DB[!(DB$TSE_code %in% c('M2800','M9900','M2331','W91')),]
x5 <- nrow(DB05)
DB06 <- as.data.table(DB05)[,.SD[.N<5],by=list(TSE_code,year(date))]
x6 <- nrow(DB06)
DB07 <- as.data.table(DB05)[,.SD[.N >= 5],by=list(TSE_code,year(date))]
x7 <- nrow(DB07)
DB08 <- DB07[(DB07$FAMILY %in% NA) |(DB07$PB %in% NA) |(DB07$TA %in% NA) |(DB07$NetSales %in% NA) |(DB07$employee %in% NA)]
x8 <- nrow(DB08)
DB09 <- DB07[!(DB07$FAMILY %in% NA) & !(DB07$PB %in% NA) & !(DB07$TA %in% NA) & !(DB07$NetSales %in% NA) & !(DB07$employee %in% NA)]
x9 <- nrow(DB09)
tbA1 <- data.frame(
"說明" = c('2001~2015 原始樣本總數','刪除金融保險業(TSE產業代碼 M2800)','刪除其他產業(TSE產業代碼 M9900)',
'刪除其他電子業(TSE產業代碼 M2331)','刪除存託憑證(TSE產業代碼 W91)','刪除當年度產業內公司家數不足5筆之樣本',
'刪除有缺漏值且足以影響分析之樣本','全樣本合計'),
"樣本數" = c(x, x1, x2, x3, x4, x6, x8, x9),
"小計" = c(x, "-","-","-",
ifelse(x1+x2+x3+x4 == x-x5,x-x5,'error'),
"-",x6+x8, ifelse(x5-x6-x8 == x9,x9,'error'))
)
theme1 <- ttheme_default(
core = list(
fg_params = list(
fontface=c(rep("plain", 7),"bold.italic")
#fontsize,hjust=0,x=0.1
),
bg_params = list(
fill=c(rep(c("grey95", "grey90"),length.out=7),
"#6BAED6"),
alpha = rep(c(1,0.5), each=5)
)
),
colhead = list(
fg_params = list(fontsize=9,fontface="bold"))
)
m <- format(tbA1, digits = 1, scientific=FALSE ,big.mark = ",")
g1 <- tableGrob(m, theme = theme1, rows=9)
png(filename=file,width=125,height = 70,units="mm",res = 500)
grid.draw(g1)
dev.off()
# write.xlsx(tbA1,file="tables.xlsx",sheetName = "table1",col.names = TRUE,row.names = FALSE,showNA = FALSE,append = FALSE)
return(tbA1)
}
q()
